version: '3'

services:

  deposit-form:
    build: ./services/deposit-form/
    networks:
      - proxy 
    container_name: deposit-form
    command: npm run serve
    labels:
      - "traefik.frontend.rule=Host:form.3deposit.localhost"
      - "traefik.backend=deposit-form"
      - "traefik.port=8080"
      - "traefik.docker.network=proxy"

  postgres:
      container_name: postgres
      image: postgres:10
      networks:
          - gateway_internal    
      volumes:
          - pg_data:/var/lib/postgresql
      labels:
        - "traefik.enable=false"    

  admin:
    build: ./services/deposit-admin/
    networks:
      - proxy
    container_name: admin
    command: npm run serve
    labels:
      - "traefik.frontend.rule=Host:admin.3deposit.localhost"
      - "traefik.backend=admin"
      - "traefik.port=8080"
      - "traefik.docker.network=proxy"

  gateway:
      build: ./services/gateway/
      container_name: gateway
      links:
          - postgres
      depends_on: 
          - postgres
      networks:
        - gateway_internal
        - proxy
      command: bash -c "pipenv run python init_db.py && pipenv run python gateway.py"
      # command: bash -c "pipenv run python gateway.py"
      labels:
        - "traefik.frontend.rule=Host:api.3deposit.localhost"
        - "traefik.backend=gateway"
        - "traefik.port=8080"
        - "traefik.docker.network=proxy"
      volumes:
        - ./services/gateway/data:/gateway/data
  
  reverse-proxy:
      container_name: reverse-proxy
      image: traefik # The official Traefik docker image
      command: --api --docker # Enables the web UI and tells Traefik to listen to docker
      ports:
        - "80:80"     # The HTTP port
        - "8080:8080" # The Web UI (enabled by --api)
      volumes:
        - /var/run/docker.sock:/var/run/docker.sock
      networks:
        - proxy

  minio-server:
    container_name: minio-server
    image: minio/minio:latest
    networks:
      - minio_internal
    volumes:
      - ./services/store-minio/data:/data
    environment:
      MINIO_ACCESS_KEY: AKIAIOSFODNN7GRAINGER
      MINIO_SECRET_KEY: wJalrXUtnFEMI/K7MDENG/bPxRfiCYGRAINGERKEY
    command: server /data
    labels:
      - "traefik.enable=false" 

  minio-service:
    build: ./services/store-minio/
    container_name: minio-service
    environment: 
      FLASK_ENV: development
      FLASK_APP: minio-service
    depends_on:
      - minio-server
    links: 
      - minio-server
    networks:
      - minio_internal
    command: pipenv run flask run --host=0.0.0.0
    labels:
      - "traefik.enable=false" 

  mongo-server:
    image: mongo
    container_name: mongo-server
    restart: always
    networks:
      - mongo_internal
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example
    volumes:
      - ./services/store-mongo/data:/data
    labels:
      - "traefik.enable=false" 

  # mongo-express:
  #   image: mongo-express
  #   restart: always
  #   networks:
  #     - mongo_internal
  #     - proxy
  #   environment:
  #     ME_CONFIG_MONGODB_ADMINUSERNAME: root
  #     ME_CONFIG_MONGODB_ADMINPASSWORD: example
  #     ME_CONFIG_MONGODB_SERVER: mongo-server
  #   labels:
  #     - "traefik.enable=false" 

  mongo-service:
    build: ./services/store-mongo/
    container_name: mongo-service
    depends_on:
      - mongo-server
    links: 
      - mongo-server
    networks:
      - mongo_internal
    environment: 
      FLASK_ENV: development
      FLASK_APP: mongo-service
    command: pipenv run flask run --host=0.0.0.0
    labels:
      - "traefik.enable=false" 

  sketchfab-service:
    build: ./services/publish-sketchfab/
    container_name: sketchfab-service
    networks:
      - gateway_internal
    environment: 
      FLASK_ENV: development
      FLASK_APP: sketchfab-service
    command: pipenv run flask run --host=0.0.0.0
    labels:
      - "traefik.enable=false"

  aws-service:
    build: ./services/publish-aws/
    container_name: aws-service
    networks:
      - gateway_internal
    environment: 
      FLASK_ENV: development
      FLASK_APP: aws-service
    command: pipenv run flask run --host=0.0.0.0
    labels:
      - "traefik.enable=false"
networks:
    proxy:
        external: true
    gateway_internal:
        external: false
    minio_internal:
        external: false
    mongo_internal:
        external: false

volumes: 
    pg_data:
